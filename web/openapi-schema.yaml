openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /rest/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/users/?page=3
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/users/?page=1
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - rest
  /rest/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - rest
  /rest/players/:
    get:
      operationId: listPlayers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/players/?page=3
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/players/?page=1
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    post:
      operationId: createPlayer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerError'
          description: ''
      tags:
      - rest
  /rest/players/{id}/:
    get:
      operationId: retrievePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    put:
      operationId: updatePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdatePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Player'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyPlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/teams/:
    get:
      operationId: listTeams
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/teams/?page=3
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/teams/?page=1
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    post:
      operationId: createTeam
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamError'
          description: ''
      tags:
      - rest
  /rest/teams/{id}/:
    get:
      operationId: retrieveTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    put:
      operationId: updateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/seasons/:
    get:
      operationId: listSeasons
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/seasons/?page=3
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/seasons/?page=1
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    post:
      operationId: createSeason
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Season'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonError'
          description: ''
      tags:
      - rest
  /rest/seasons/{id}/:
    get:
      operationId: retrieveSeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    put:
      operationId: updateSeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Season'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateSeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Season'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroySeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/leagues/:
    get:
      operationId: listLeagues
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/leagues/?page=3
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://localhost.test/rest/leagues/?page=1
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    post:
      operationId: createLeague
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/League'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueError'
          description: ''
      tags:
      - rest
  /rest/leagues/{id}/:
    get:
      operationId: retrieveLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    put:
      operationId: updateLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/League'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/League'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - username
    Player:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          default: ''
        password:
          type: string
          writeOnly: true
        last_name:
          type: string
          writeOnly: true
        first_name:
          type: string
          writeOnly: true
        display_name:
          type: string
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              name:
                type: string
                maxLength: 100
            required:
            - name
          readOnly: true
        team_ids:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - password
      - last_name
      - first_name
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        league:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        season:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        captain:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            display_name:
              type: string
        players:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              display_name:
                type: string
          readOnly: true
      required:
      - name
      - league
      - season
      - captain
    Season:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        league:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              name:
                type: string
                maxLength: 100
            required:
            - name
      required:
      - name
      - league
      - start_date
      - end_date
      - teams
    League:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - name
    PlayerError:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/FieldError'
        password:
          $ref: '#/components/schemas/FieldError'
        last_name:
          $ref: '#/components/schemas/FieldError'
        first_name:
          $ref: '#/components/schemas/FieldError'
        display_name:
          $ref: '#/components/schemas/FieldError'
        team_ids:
          $ref: '#/components/schemas/FieldError'
    TeamError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldError'
        league:
          $ref: '#/components/schemas/FieldError'
        season:
          $ref: '#/components/schemas/FieldError'
        captain:
          $ref: '#/components/schemas/FieldError'
    SeasonError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldError'
        league:
          $ref: '#/components/schemas/FieldError'
        start_date:
          $ref: '#/components/schemas/FieldError'
        end_date:
          $ref: '#/components/schemas/FieldError'
        teams:
          $ref: '#/components/schemas/FieldError'
    LeagueError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldError'
    FieldError:
      type: array
      items:
        type: string
