openapi: 3.0.2
info:
  title: ''
  version: '0.1'
paths:
  /rest/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
      tags:
      - rest
  /rest/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - rest
  /rest/players/:
    get:
      operationId: listPlayers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerList'
          description: ''
      tags:
      - rest
    post:
      operationId: createPlayer
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerError'
          description: ''
      tags:
      - rest
  /rest/players/{id}/:
    get:
      operationId: retrievePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    put:
      operationId: updatePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdatePlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Player'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyPlayer
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this player.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/teams/:
    get:
      operationId: listTeams
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
          description: ''
      tags:
      - rest
    post:
      operationId: createTeam
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamError'
          description: ''
      tags:
      - rest
  /rest/teams/{id}/:
    get:
      operationId: retrieveTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    put:
      operationId: updateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this team.
        schema:
          type: string
      - name: id
        required: false
        in: query
        description: id
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/seasons/:
    get:
      operationId: listSeasons
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonList'
          description: ''
      tags:
      - rest
    post:
      operationId: createSeason
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonError'
          description: ''
      tags:
      - rest
  /rest/seasons/{id}/:
    get:
      operationId: retrieveSeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    put:
      operationId: updateSeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateSeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Season'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Season'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroySeason
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this season.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/leagues/:
    get:
      operationId: listLeagues
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueList'
          description: ''
      tags:
      - rest
    post:
      operationId: createLeague
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeagueError'
          description: ''
      tags:
      - rest
  /rest/leagues/{id}/:
    get:
      operationId: retrieveLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    put:
      operationId: updateLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/League'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyLeague
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this league.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /rest/matches/:
    get:
      operationId: listMatchs
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchList'
          description: ''
      tags:
      - rest
    post:
      operationId: createMatch
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchError'
          description: ''
      tags:
      - rest
  /rest/matches/{id}/:
    get:
      operationId: retrieveMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this match.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
      tags:
      - rest
    put:
      operationId: updateMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this match.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
      tags:
      - rest
    patch:
      operationId: partialUpdateMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this match.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Match'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
          description: ''
      tags:
      - rest
    delete:
      operationId: destroyMatch
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this match.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - rest
  /user/profile/:
    get:
      operationId: retrieveProfile
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - user
    post:
      operationId: createProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileError'
          description: ''
      tags:
      - user
    put:
      operationId: updateProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - user
    patch:
      operationId: partialUpdateProfile
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
      tags:
      - user
  /user/schedule/:
    get:
      operationId: listSchedules
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleList'
          description: ''
      tags:
      - user
  /user/session/:
    get:
      operationId: retrieveSession
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
      tags:
      - user
    put:
      operationId: updateSession
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Session'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Session'
          description: ''
      tags:
      - user
components:
  schemas:
    FieldError:
      type: array
      items:
        type: string
    League:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - name
    LeagueError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldError'
    LeagueList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/leagues/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/leagues/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/League'
    Match:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              name:
                type: string
                maxLength: 100
            required:
            - name
        season:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        datetime:
          type: string
          format: date-time
        location:
          type: integer
      required:
      - teams
      - season
      - datetime
      - location
    MatchError:
      type: object
      properties:
        teams:
          $ref: '#/components/schemas/FieldError'
        season:
          $ref: '#/components/schemas/FieldError'
        datetime:
          $ref: '#/components/schemas/FieldError'
        location:
          $ref: '#/components/schemas/FieldError'
    MatchList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/matches/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/matches/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Match'
    Player:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        email:
          type: string
          format: email
          writeOnly: true
          default: ''
        last_name:
          type: string
          writeOnly: true
        first_name:
          type: string
          writeOnly: true
        display_name:
          type: string
          maxLength: 100
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              name:
                type: string
                maxLength: 100
            required:
            - name
          readOnly: true
        team_ids:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - last_name
      - first_name
      - display_name
    PlayerError:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/FieldError'
        last_name:
          $ref: '#/components/schemas/FieldError'
        first_name:
          $ref: '#/components/schemas/FieldError'
        display_name:
          $ref: '#/components/schemas/FieldError'
        team_ids:
          $ref: '#/components/schemas/FieldError'
    PlayerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/players/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/players/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    Profile:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
          default: ''
        password:
          type: string
          writeOnly: true
        display_name:
          type: string
        biography:
          type: string
        date_joined:
          type: string
          format: date
          readOnly: true
        image:
          type: string
          format: binary
          nullable: true
      required:
      - first_name
      - last_name
      - password
    ProfileError:
      type: object
      properties:
        first_name:
          $ref: '#/components/schemas/FieldError'
        last_name:
          $ref: '#/components/schemas/FieldError'
        email:
          $ref: '#/components/schemas/FieldError'
        password:
          $ref: '#/components/schemas/FieldError'
        display_name:
          $ref: '#/components/schemas/FieldError'
        biography:
          $ref: '#/components/schemas/FieldError'
        image:
          $ref: '#/components/schemas/FieldError'
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        team:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        opponent:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        match:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              readOnly: true
        datetime:
          type: string
          format: date-time
        location:
          type: string
        away:
          type: boolean
      required:
      - team
      - opponent
      - match
      - datetime
      - location
      - away
    ScheduleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/user/schedule/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/user/schedule/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Schedule'
    Season:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        league:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              name:
                type: string
                maxLength: 100
            required:
            - name
      required:
      - name
      - league
      - start_date
      - end_date
      - teams
    SeasonError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldError'
        league:
          $ref: '#/components/schemas/FieldError'
        start_date:
          $ref: '#/components/schemas/FieldError'
        end_date:
          $ref: '#/components/schemas/FieldError'
        teams:
          $ref: '#/components/schemas/FieldError'
    SeasonList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/seasons/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/seasons/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Season'
    Session:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        csrf_token:
          type: string
          readOnly: true
        expiry_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - username
      - password
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 100
        league:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        season:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        captain:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            url:
              type: string
              readOnly: true
            name:
              type: string
              maxLength: 100
          required:
          - name
        players:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                readOnly: true
              url:
                type: string
                readOnly: true
              name:
                type: string
                maxLength: 100
            required:
            - name
          readOnly: true
      required:
      - name
      - league
      - season
      - captain
    TeamError:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FieldError'
        league:
          $ref: '#/components/schemas/FieldError'
        season:
          $ref: '#/components/schemas/FieldError'
        captain:
          $ref: '#/components/schemas/FieldError'
    TeamList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/teams/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/teams/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Team'
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        date_joined:
          type: string
          format: date-time
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - username
    UserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/users/?page=3
        previous:
          type: string
          nullable: true
          format: uri
          example: http://localhost.test/rest/users/?page=1
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
- bearerAuth: []
